#!/bin/bash
# baraction.sh for spectrwm status bar

## DISK
hdd() {
  hdd="$(df -h | awk 'NR==5{print $3, $5}')"
  echo -e ": $hdd"
}

## RAM
mem() {
  mem=`free | awk '/Mem/ {printf "%dM/%dM\n", $3 / 1024.0, $2 / 1024.0 }'`
  echo -e ":$mem"
}

## CPU
cpu() {
  read cpu a b c previdle rest < /proc/stat
  prevtotal=$((a+b+c+previdle))
  sleep 0.5
  read cpu a b c idle rest < /proc/stat
  total=$((a+b+c+idle))
  cpu=$((100*( (total-prevtotal) - (idle-previdle) ) / (total-prevtotal) ))
  echo -e " : $cpu%"
}
##heat
heat()
{
heat=$(sensors |grep -A 0 'Package' | tr -d -c 0-9| cut -c2-4)
echo -e  "$((heat/10)) "


}
## VOLUME
vol() {
    vol=$(awk -F"[][]" '/dB/ { print $2 }' <(amixer sget Master))
    echo -e ": $vol"
}
battt() {
	batt=$(acpi -b | grep -P -o '[0-9]+(?=%)')
	ch=$(acpi -b |grep -c "Discharging")
    echo -e " : $batt $ch"
}

SLEEP_SEC=3
#loops forever outputting a line every SLEEP_SEC secs

# It seems that we are limited to how many characters can be displayed via
# the baraction script output. And the the markup tags count in that limit.
# So I would love to add more functions to this script but it makes the 
# echo output too long to display correctly.
while true; do
	xsetroot -name  "$(battt) | $(heat) | $(cpu)| $(mem) | $(hdd) |  :$(date) | $(vol) "
	sleep $SLEEP_SEC
done
